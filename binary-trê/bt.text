Dưới đây là các bài tập về cây nhị phân, từ cơ bản đến nâng cao, kèm theo liên kết đến các nền tảng online để bạn có thể thực hành và kiểm tra bài làm.

---

### **1. Tạo và Duyệt Cây Nhị Phân**
- **Đề bài**: Tạo một cây nhị phân và thực hiện ba kiểu duyệt: *Preorder*, *Inorder*, *Postorder*.
- **Link thực hành**: [Binary Tree Traversal - GeeksForGeeks](https://practice.geeksforgeeks.org/problems/recursive-traversals-of-binary-tree/1)

---

### **2. Tìm chiều cao của cây**
- **Đề bài**: Tính chiều cao của một cây nhị phân.
- **Link thực hành**: [Height of Binary Tree - GeeksForGeeks](https://practice.geeksforgeeks.org/problems/height-of-binary-tree/1)

---

### **3. Kiểm tra cây nhị phân cân bằng**
- **Đề bài**: Kiểm tra xem cây nhị phân có phải là cây cân bằng hay không.
- **Link thực hành**: [Check for Balanced Tree - LeetCode](https://leetcode.com/problems/balanced-binary-tree/)

---

### **4. Đếm số lượng nút lá**
- **Đề bài**: Tính số lượng nút lá trong một cây nhị phân.
- **Link thực hành**: [Leaf Nodes Count - GeeksForGeeks](https://practice.geeksforgeeks.org/problems/count-leaves-in-binary-tree/1)

---

### **5. Tìm giá trị lớn nhất trong cây nhị phân**
- **Đề bài**: Tìm giá trị lớn nhất trong cây nhị phân.
- **Link thực hành**: [Maximum Node Value in Binary Tree - GeeksForGeeks](https://practice.geeksforgeeks.org/problems/maximum-path-sum/1)

---

### **6. Kiểm tra cây nhị phân tìm kiếm (BST)**
- **Đề bài**: Kiểm tra xem cây nhị phân có phải là cây nhị phân tìm kiếm không.
- **Link thực hành**: [Validate Binary Search Tree - LeetCode](https://leetcode.com/problems/validate-binary-search-tree/)

---

### **7. Tính tổng các nút trong cây**
- **Đề bài**: Tính tổng giá trị của tất cả các nút trong cây nhị phân.
- **Link thực hành**: [Sum of Nodes in Binary Tree - GeeksForGeeks](https://practice.geeksforgeeks.org/problems/sum-of-binary-tree/1)

---

### **8. Tìm đường đi từ gốc đến lá**
- **Đề bài**: In tất cả các đường đi từ gốc đến các nút lá trong cây nhị phân.
- **Link thực hành**: [Root to Leaf Paths - LeetCode](https://leetcode.com/problems/binary-tree-paths/)

---

### **9. Xóa nút trong cây nhị phân tìm kiếm**
- **Đề bài**: Xóa một nút trong cây nhị phân tìm kiếm.
- **Link thực hành**: [Delete Node in a BST - LeetCode](https://leetcode.com/problems/delete-node-in-a-bst/)

---

### **10. Kiểm tra hai cây có giống nhau không**
- **Đề bài**: Kiểm tra xem hai cây nhị phân có giống hệt nhau không.
- **Link thực hành**: [Same Tree - LeetCode](https://leetcode.com/problems/same-tree/)

---

### **11. Đếm số đường đi có tổng bằng giá trị cho trước**
- **Đề bài**: Tìm số lượng đường đi từ gốc đến lá có tổng giá trị bằng `targetSum`.
- **Link thực hành**: [Path Sum III - LeetCode](https://leetcode.com/problems/path-sum-iii/)

---

### **12. Tìm đường kính của cây nhị phân**
- **Đề bài**: Tìm đường kính (đường đi dài nhất giữa hai nút bất kỳ) của một cây nhị phân.
- **Link thực hành**: [Diameter of Binary Tree - LeetCode](https://leetcode.com/problems/diameter-of-binary-tree/)

---

### **13. Cây nhị phân đối xứng**
- **Đề bài**: Kiểm tra xem cây nhị phân có đối xứng không.
- **Link thực hành**: [Symmetric Tree - LeetCode](https://leetcode.com/problems/symmetric-tree/)

---

### **14. Xây dựng cây từ Preorder và Inorder**
- **Đề bài**: Xây dựng lại cây nhị phân từ hai danh sách *Preorder* và *Inorder Traversal*.
- **Link thực hành**: [Construct Binary Tree from Preorder and Inorder Traversal - LeetCode](https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/)

---

### **15. Xây dựng cây từ Postorder và Inorder**
- **Đề bài**: Xây dựng lại cây nhị phân từ hai danh sách *Postorder* và *Inorder Traversal*.
- **Link thực hành**: [Construct Binary Tree from Inorder and Postorder Traversal - LeetCode](https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/)

---

Các bài trên cung cấp nền tảng từ cơ bản đến trung bình, phù hợp để bạn rèn luyện kỹ năng làm việc với cây nhị phân. Nếu cần hỗ trợ giải bài nào, cứ hỏi mình nhé! 😊