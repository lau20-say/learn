D∆∞·ªõi ƒë√¢y l√† danh s√°ch c√°c b√†i to√°n s·ª≠ d·ª•ng quy ho·∫°ch ƒë·ªông 2 chi·ªÅu, c√≥ ƒë·ªô kh√≥ n·∫±m gi·ªØa trung b√¨nh v√† kh√≥. C√°c b√†i n√†y y√™u c·∫ßu b·∫°n ph·∫£i t∆∞ duy th√™m v·ªÅ c√°ch x√¢y d·ª±ng tr·∫°ng th√°i v√† chuy·ªÉn tr·∫°ng th√°i:

---

### **1. "Largest Rectangle in Histogram"**  
- **M√¥ t·∫£**: Cho m·ªôt histogram (d√£y c·ªôt d·ªçc) v·ªõi chi·ªÅu cao ƒë∆∞·ª£c bi·ªÉu di·ªÖn b·∫±ng m·ªôt m·∫£ng s·ªë nguy√™n. T√¨m di·ªán t√≠ch l·ªõn nh·∫•t c·ªßa h√¨nh ch·ªØ nh·∫≠t c√≥ th·ªÉ ƒë∆∞·ª£c t·∫°o b·ªüi c√°c c·ªôt li√™n ti·∫øp.  
- **√ù t∆∞·ªüng gi·∫£i quy·∫øt**:  
  - Chuy·ªÉn b√†i to√°n th√†nh t√≠nh to√°n DP cho m·ªói c·ªôt.
  - T√¨m **chi·ªÅu cao t·ªëi thi·ªÉu** gi·ªØa c√°c c·ªôt ƒë·ªÉ m·ªü r·ªông v√πng ch·ªØ nh·∫≠t.

- **Link ch·∫•m b√†i**:  
  - [Leetcode 84 - Largest Rectangle in Histogram](https://leetcode.com/problems/largest-rectangle-in-histogram/)

---

### **2. "Counting Squares"**  
- **M√¥ t·∫£**: Cho m·ªôt ma tr·∫≠n nh·ªã ph√¢n `matrix`. ƒê·∫øm t·ªïng s·ªë h√¨nh vu√¥ng (c√°c k√≠ch th∆∞·ªõc) ch·ª©a to√†n s·ªë `1`.  
- **√ù t∆∞·ªüng gi·∫£i quy·∫øt**:  
  - DP 2D v·ªõi `dp[i][j]` l√† s·ªë h√¨nh vu√¥ng k·∫øt th√∫c t·∫°i √¥ `(i, j)`.  
  - C√¥ng th·ª©c: `dp[i][j] = min(dp[i-1][j], dp[i][j-1], dp[i-1][j-1]) + 1`.

- **Link ch·∫•m b√†i**:  
  - [Leetcode 1277 - Count Square Submatrices with All Ones](https://leetcode.com/problems/count-square-submatrices-with-all-ones/)

---

### **3. "Palindromic Substrings"**  
- **M√¥ t·∫£**: Cho m·ªôt chu·ªói `s`, t√¨m t·ªïng s·ªë chu·ªói con l√† chu·ªói ƒë·ªëi x·ª©ng (palindrome).  
- **√ù t∆∞·ªüng gi·∫£i quy·∫øt**:  
  - DP 2D v·ªõi `dp[i][j]` l√† `true` n·∫øu chu·ªói con `s[i..j]` l√† palindrome.  
  - C√¥ng th·ª©c:  
    - `dp[i][j] = true` n·∫øu `s[i] == s[j]` v√† `dp[i+1][j-1]` l√† `true`.  

- **Link ch·∫•m b√†i**:  
  - [Leetcode 647 - Palindromic Substrings](https://leetcode.com/problems/palindromic-substrings/)

---

### **4. "Burst Balloons"**  
- **M√¥ t·∫£**: B·∫°n ƒë∆∞·ª£c cho m·ªôt m·∫£ng b√≥ng bay, m·ªói b√≥ng c√≥ ƒëi·ªÉm s·ªë. Khi b·∫°n n·ªï b√≥ng `i`, b·∫°n ƒë∆∞·ª£c ƒëi·ªÉm `nums[i-1] * nums[i] * nums[i+1]`. T√≠nh s·ªë ƒëi·ªÉm t·ªëi ƒëa c√≥ th·ªÉ ƒë·∫°t ƒë∆∞·ª£c.  
- **√ù t∆∞·ªüng gi·∫£i quy·∫øt**:  
  - DP 2D v·ªõi `dp[i][j]` l√† ƒëi·ªÉm t·ªëi ƒëa khi ch·ªâ n·ªï b√≥ng t·ª´ `i` ƒë·∫øn `j`.  
  - C√¥ng th·ª©c:  
    - `dp[i][j] = max(dp[i][k-1] + nums[i-1]*nums[k]*nums[j+1] + dp[k+1][j])` v·ªõi `k` ch·∫°y t·ª´ `i` ƒë·∫øn `j`.

- **Link ch·∫•m b√†i**:  
  - [Leetcode 312 - Burst Balloons](https://leetcode.com/problems/burst-balloons/)

---

### **5. "Longest Palindromic Subsequence"**  
- **M√¥ t·∫£**: Cho m·ªôt chu·ªói `s`, t√¨m ƒë·ªô d√†i c·ªßa chu·ªói con ƒë·ªëi x·ª©ng d√†i nh·∫•t.  
- **√ù t∆∞·ªüng gi·∫£i quy·∫øt**:  
  - DP 2D v·ªõi `dp[i][j]` l√† ƒë·ªô d√†i chu·ªói ƒë·ªëi x·ª©ng d√†i nh·∫•t trong `s[i..j]`.  
  - C√¥ng th·ª©c:  
    - N·∫øu `s[i] == s[j]`: `dp[i][j] = dp[i+1][j-1] + 2`.  
    - Ng∆∞·ª£c l·∫°i: `dp[i][j] = max(dp[i+1][j], dp[i][j-1])`.

- **Link ch·∫•m b√†i**:  
  - [Leetcode 516 - Longest Palindromic Subsequence](https://leetcode.com/problems/longest-palindromic-subsequence/)

---

### **6. "Partition Equal Subset Sum"**  
- **M√¥ t·∫£**: Cho m·ªôt m·∫£ng s·ªë nguy√™n `nums`. Ki·ªÉm tra xem c√≥ th·ªÉ chia m·∫£ng th√†nh hai t·∫≠p h·ª£p con v·ªõi t·ªïng b·∫±ng nhau kh√¥ng.  
- **√ù t∆∞·ªüng gi·∫£i quy·∫øt**:  
  - DP 2D v·ªõi `dp[i][j]` l√† `true` n·∫øu c√≥ th·ªÉ ch·ªçn m·ªôt t·∫≠p h·ª£p t·ª´ `nums[0..i]` v·ªõi t·ªïng b·∫±ng `j`.  
  - C√¥ng th·ª©c:  
    - `dp[i][j] = dp[i-1][j] || dp[i-1][j-nums[i]]`.

- **Link ch·∫•m b√†i**:  
  - [Leetcode 416 - Partition Equal Subset Sum](https://leetcode.com/problems/partition-equal-subset-sum/)

---

### **7. "Interleaving String"**  
- **M√¥ t·∫£**: Cho ba chu·ªói `s1`, `s2`, v√† `s3`. Ki·ªÉm tra xem `s3` c√≥ th·ªÉ ƒë∆∞·ª£c t·∫°o th√†nh b·∫±ng c√°ch xen k·∫Ω c√°c k√Ω t·ª± c·ªßa `s1` v√† `s2` kh√¥ng.  
- **√ù t∆∞·ªüng gi·∫£i quy·∫øt**:  
  - DP 2D v·ªõi `dp[i][j]` l√† `true` n·∫øu `s3[0..i+j-1]` c√≥ th·ªÉ ƒë∆∞·ª£c t·∫°o th√†nh t·ª´ `s1[0..i-1]` v√† `s2[0..j-1]`.  
  - C√¥ng th·ª©c:  
    - `dp[i][j] = (s3[i+j-1] == s1[i-1] && dp[i-1][j]) || (s3[i+j-1] == s2[j-1] && dp[i][j-1])`.

- **Link ch·∫•m b√†i**:  
  - [Leetcode 97 - Interleaving String](https://leetcode.com/problems/interleaving-string/)

---

### **8. "Regular Expression Matching"**  
- **M√¥ t·∫£**: Cho m·ªôt chu·ªói `s` v√† m·ªôt bi·ªÉu th·ª©c `p` v·ªõi c√°c k√Ω t·ª± `.` (b·∫•t k·ª≥ k√Ω t·ª±) v√† `*` (0 ho·∫∑c nhi·ªÅu l·∫ßn k√Ω t·ª± ƒë·ª©ng tr∆∞·ªõc). Ki·ªÉm tra xem `p` c√≥ kh·ªõp v·ªõi `s` hay kh√¥ng.  
- **√ù t∆∞·ªüng gi·∫£i quy·∫øt**:  
  - DP 2D v·ªõi `dp[i][j]` l√† `true` n·∫øu `p[0..j-1]` kh·ªõp v·ªõi `s[0..i-1]`.  
  - C√¥ng th·ª©c:  
    - N·∫øu `p[j-1] == s[i-1]` ho·∫∑c `p[j-1] == '.'`: `dp[i][j] = dp[i-1][j-1]`.  
    - N·∫øu `p[j-1] == '*'`: `dp[i][j] = dp[i][j-2] || (dp[i-1][j] && (s[i-1] == p[j-2] || p[j-2] == '.'))`.

- **Link ch·∫•m b√†i**:  
  - [Leetcode 10 - Regular Expression Matching](https://leetcode.com/problems/regular-expression-matching/)

---

C√°c b√†i tr√™n ƒë·ªÅu y√™u c·∫ßu b·∫°n ph√°t tri·ªÉn t∆∞ duy ph√¢n t√≠ch tr·∫°ng th√°i v√† m·ªëi li√™n h·ªá gi·ªØa c√°c tr·∫°ng th√°i con. Ch√∫c b·∫°n luy·ªán t·∫≠p t·ªët! üòä